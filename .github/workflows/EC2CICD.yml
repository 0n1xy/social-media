name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          printf "%s" "${{ secrets.EC2_KEY_PATH }}" > ~/.ssh/id_rsa  # Save private key to id_rsa
          chmod 600 ~/.ssh/id_rsa  # Secure permissions for the SSH key
          ssh-keyscan -H ${{ secrets.EC2_INSTANCE_IP }} >> ~/.ssh/known_hosts  # Add EC2 instance to known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_INSTANCE_IP }} << 'EOF'
            # Install Git if not already installed
            if ! command -v git &> /dev/null; then
              sudo dnf install -y git  # Use dnf for Amazon Linux 2023
            fi

            # Define application directory and repository URL
            APP_DIR="/home/ec2-user/my-app"  # Change this to your actual application path
            REPO_URL="git@github.com:0n1xy/social-media.git"  # Replace with your actual repo URL

            # Check if app directory exists; if not, clone the repository
            if [ ! -d "$APP_DIR" ]; then
              git clone $REPO_URL $APP_DIR  # Clone the repo into the APP_DIR
            fi

            # Navigate to app directory
            cd $APP_DIR
            
            # Pull latest changes from the repository
            if ! git pull origin main; then
              echo "Failed to pull latest changes from the repository."
              exit 1
            fi
            
            # Install Docker Compose if not already installed
            if ! command -v docker-compose &> /dev/null; then
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            
            # Build Docker images
            if ! docker-compose build; then
              echo "Failed to build Docker images."
              exit 1
            fi
            
            # Stop and remove old containers
            docker-compose down
            
            # Start the new containers in detached mode
            docker-compose up -d
          EOF
